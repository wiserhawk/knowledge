===================================================
	VPC (Virtual Private Cloud)
===================================================

	===================================
	VPC Overview
	===================================
	- What is VPC?
		- Amazon Virtual Private Cloud let you provision a logical isolated section of the AWS cloud where you can launch AWS resources in a virtual network that you
		  define. You have complete control over your virtual networking environmnet, including selection of your own IP addresses range, creation of subnets, and
		  configuration of route tables and network gateways.
		- You can easily customize the network configuration for your Amazon Virtual Private Cloud. For example, you can create a public-facing subnet for your
		  webservers that has access to	the internet, and place your backend systems such as database or application servers in a private-facing subnet with no
		  internet access. You can leverage multiple layers of security, including security groups and network access control lists, to help control access to EC2
		  instances in each subnet.
		- Additionally, you can create a Hardware Virtual Private Network (VPN) connection between your corporate datacenter and your VPC and leverage the AWS cloud
		  as an extension of your corporate datacenter.
		- VPC architecture with Public & Private Subnets, Security Groups, NACL, Route Table, Router and Internet Gateways are showed in image available in VPC directory
		  given below. Path : /knowledge/Cloud/AWS_Solution_Architect_Associate_Certification/VPC/VPC-with-Public-Private-Subnets-SG-NACL-RT-Router-IG.jpg
		
	- IP addresses for Private subnets:
		- Three ranges of IP addresses are reserved for Private Subnets:
			- 10.0.0.0 - 10.255.255.255 (10/8 prefix)
			- 172.16.0.0 - 172.31.255.255 (172/16/12 prefix)
			- 192.168.0.0 - 192.168.255.255 (192.168/16 prefix)
	
	- What can we do with a VPC?
		- Launch instances into a subnet of your choice.
		- Assign custom IP address ranges in each subnet.
		- Configure route table between subnets.
		- Create internet gateway and attach it to our VPC.
		- Much better security control over your AWS resources.
		- Instance security groups
		- Subnet network access control lists (NACLs)
		
	- Default VPC vs Custom VPC
		- Default VPC is user friendly, allowing you to immediately deploy instances.
		- All subnets in default VPC have a route out to the internet.
		- Each EC2 instance has both a public and private IP address.
		
	- VPC Peering (VPC <------> VPC)
		- Allows you to connect one VPC with another via a direct network route using private IP addresses.
		- Instances behave as if they were on the same private network.
		- You can peer VPC's with other AWS accounts as well as with other VPC's in the same account.
		- Peering is in a star configuration: i.e. 1 central VPC peers with 4 others. NO TRANSITIVE PEERING !!!
		- You can peer between regions.
		
	- No Transitive Peering (To talk between VPC-B & VPC-D, need direct peering between them, cannot talk through transitive peering via VPC-A) 
	
					   /--->VPC-D
					  /		^	
					 /		|	
					/		|
				   /		|
				  /			|
				 /			|
				/			|
		VPC-B <----------> VPC-A <------------> VPC-C
							|
							|
							|
							|
						  VPC-E
	
	- Remember
		- 1 Subnet = 1 Availibility Zone
		- Security Groups are Stateful; NACL are Stateless.
		- Security Group cannot span VPCs.
		- No Transitive Peering
		- US-EAST-1A in your AWS account can be completely different AZ to US-EAST-1A in another AWS account. The AZ's are randomized.
		
	- What happens when you create just a VPC?
		- It create a default Router.
		- It create a default Route Table.
		- It create a default NACL.
		- It create a default Security Group.
		- It does NOT create any default Subnet.
		- It does NOT create any Internet Gateway.
	
	- Subnets
		- Subnets can not span across AZs.
		- Amazon reserve 5 IP address from Subnet for internal usages.
			- 10.0.0.0: Network address.
			- 10.0.0.1: Reserved by AWS for the VPC router.
			- 10.0.0.2: Reserved by AWS. IP address of the DNS server is always the base of VPC network range plus two; however, AWS also reserve the base of each
						subnet range plus two. For VPCs with multiple CIDR blocks, the IP address of the DNS server is located in the primary CIDR.
			- 10.0.0.3: Reserved by AWS for future use.
			- 10.0.0.255: Network broadcast address. AWS do not support broadcast in a VPC, therefore it reserve this address.
	
	- Internet Gateways
		- By default Internet Gateway is detached once you create it. You have to manually attached it with VPC.
		- You can have only one Internet Gateway per VPC. AWS takes care of High Availibility of Internet Gateway.
		
	- Route Table
		- All subnet create by default connected to Main Route Table (Default), that means they are by default pulic. Which is kind of security concern.
		- For this we can make our Main Route Table as private and can create separate Route Table a public.
		
	===================================
	NAT Instances & NAT Gateways	
	===================================
	- What is Network Address Translation (NAT)?
		- Your EC2 instances in private subnets do not have direct access to internet. Therefore you cannot do all those activities on private EC2 instances which
		  are dependent on internet e.g. Softwares installation/update, security patch update etc. NAT Instances or NAT Gateways provides a indirect access of 
		  internet to private EC2 instances.
		  
	- NAT Instances:
		- NAT Instances are single EC2 instances on public subnets. You can search "NAT" to get NAT Amazon AMIs and lauch an EC2 instance in public subnet.
		
	- NAT Gateways:
		- NAT Gateways are highly available gateways to handle internet communications. 9 out of 10 time you will use NAT Gateways in your requirements. They spread
		  across multiple AZs. They don't dependes on single instance. 
		- If you have resources in multiple Availibility Zones and they share one NAT gateway, in the event of that the NAT gateway's Availibility Zone is down,
		  resources in other Availibility Zones lose internet access. To create an Availibility Zone-independent architecture, create a NAT gateway in each Availibility
		  Zone and configure your routing to ensure the resources use the NAT gateway in the same availability Zone.
		 
	- NAT Instance Exam Tips:
		- When creating NAT instance, Disable Source/Destination Checks on the instance.
		- NAT instance must be in public subnet.
		- There must be a route out of the private subnet to the NAT instance, in order of this to work.
		- The amount of traffic that NAT instances can support dependes on the instance size. If you are bottlenecking, increase the instance size.
		- You can create high availability using Autoscaling Groups, multiple subnets in different AZs, and script to automate failover. But everthing need to be
		  handle by use only.
		- NAT instances are always behind a Securty Group.
		
	- NAT Gateways Exam Tips:
		- Redundant inside the Availibility Zone. It can handle NAT failure automatically. 
		- Preferred by the enterprise.
		- Starts throughput at 5Gbps and scales currently to 45Gbps.
		- No need to patch
		- Not associated with security groups.
		- Automatically assigned a public IP address.
		- Remember to update your Route Tables.
		- No need to Disable Source/Destination Checks.
		
	===================================
	Network Access Control List (NACL)
	===================================
		
		
 