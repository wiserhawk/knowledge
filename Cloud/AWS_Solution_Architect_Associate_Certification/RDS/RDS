=========================================
	RDS (Relational Database Service)
=========================================

	===================================
	Databases on AWS
	===================================
	- RDS (OLTP) Relational Databases on AWS
		- MS SQL Server
		- Oracle
		- MySQL
		- Aurora
		- PostgreSQL
		- Maria DB
	
	- RDS has two key features:
		- Multi-AZ: For Disaster Recovery
		- Read Replicas: For Performance
		
	- RDS Non-Relational (NoSQL) Databases on AWS
		- DynamoDB
		
	- RDS (OLAP) Data Warehousing on AWS
		- Redshift
		
	- What is Data Warehousing?
		- Used for business intelligence . Tools like Cognos, Jaspersoft, SQL Server Reporting Services, Oracle Hyperion, SAP NetWeaver.
		- Used to pull in very large and complex data sets. Usually used by management to do queries on data (such as performance vs target etc).
		
		- OLTP vs OLAP
			- Online Transaction Processing (OLTP) differs from Online Analytics Processing (OLAP) in terms of types of queries you will run.
			- OLTP Example:
				- Order number 21234322
				- Pull up a row of data such as Name, Date, Address to deliver to, Delivery Status etc.
			- OLAP Example: Much complex
				- Net Profit for EMEA and Pacific for the Digital Radio Product.
				- Pull in large number of records.
				- Sum of Radios Sold in EMEA.
				- Sum of Radios Sold in Pacific.
				- Unit Cost of Radio in each region
				- Sale price of each radio
				- Sale Price - Unit Cost
		
		- Data Warehousing databases use different type of architecture both from a database perspective and infrastructure layer.
		- Amazon's Data Warehouse Solution is called Redshift
	
	- What is ElastiCache?
		- ElastiCache is a web service that make it easy to deploy, operate, and scale an in-memory cache in the cloud. The service improves the performance of
		  web applicaitons by allowing you to retrieve information from fast, managed , in-memory caches, instead of relying entirely on slower disk-based databases.
		- ElastiCache supports two fully managed open-source in-memory caching engines:
			- Redis
			- Memcached
			
	===================================
	RDS Instance
	===================================
	- RDS runs on Virtual Machines.
	- We can SSH to RDS Virtual Machines. These are internally AWS managed VM.
	- Patching of RDS OS and DB is Amazon's responsibility.
	- RDS is NOT Serverless.
	- There is option Aurora Serverless that is an exception case.
	
	==========================================
	RDS - Backups, Multi-AZ & Read Replicas
	==========================================
	- Backups : There are two different types of Backups for RDS.
		- Automated Backups
		- Database Snapshots
	
	- Automated Backups:
		- Automated Backups allow you to recover your database to any point in time within a "retention period". The retention period can be between one and 35 days.
		  Automated Backups will take a full daily snapshot and will also store transaction logs throughout the day. When you do a recovery, AWS will first choose
		  the most recent daily backup, and then apply transaction logs relevant to that day. This allows you to do a point in time recovery down to a second,
		  within the retention period.
		- Automated Backups are enabled by default. The backup data is stored in S3 and you get free storage space equal to the size of your database. So if you 
		  have an RDS instance of 10 GB, you will get 10 GB worth of storage.
		- Backups are taken within a defined window. During the backup window, storage I/O may be suspendended while your data is being backed up and you may 
		  experience elevated latency.
		  
	- Database Snapshots:
		- DB Snapshots are done manually (i.e they are user initialed.) They are stored even after you delete the original RDS instance, unlike automated backups.
		
	- Restoring Backups:
		- Whenever you restore either an Automatic Backup or a manual DB Snapshot, the restored version of database will be a entirely new RDS instance with 
		  a new DNS endpoint. e.g.
		  original.eu-west-1.rds.amazonaws.com		=====>>>	restored.eu-west-1.rds.amazonaws.com
		  
	- Encryption At Restoring
		- Encryption at rest is supported for MySQL, Oracle, SQL Server, PostgreSQL, MariaDB & Aurora. Encryption is done using the AWS Key Management Service (KMS).
		  Once your RDS instance is encrypted, the data stored at rest in the underlying storage is encrypted, as are its automated backups, read replicas & snapshots.
		
	- What is Multi-AZ?
		- Multi-AZ allows you to have an exact copy of your production database in another Availability Zone. AWS handles the replication for you, so when your 
		  production is written to, this write will automatically be synchronized to the stand by database.
		- In the event to planned database maintenance, DB instance failure, or an Availability Zone failure, AWS RDS will automatically failover to the standby 
		  so that database operations can resume quickly without administrative intervaention.
		- Multi-AZ is available for the following databases:
			- SQL Server
			- Oracle
			- MySQL
			- PostgreSQL
			- MariaDB
		- Aurora by its architecture already a fault tolerant
		
	- What is Read Replicas?
		- Read replicas allow your to have a read-only copy of your production database. This is achieved by using Asynchronous replication from the primary RDS
		  instance to the read replicas. You use read replicas primarily for very read-heavy database workloads.
		- Read Replicas can be create from another read replica.
		- Read Replicas are available for the following databases:
			- MySQL
			- PostgreSQL
			- MariaDB
			- Oracle
			- Aurora
		- Things to know about Read Replicas:
			- Used for scaling, not for DR
			- Must have automatic backups turned-on on your primary database (source DB) in order to deploy a read replica.
			- You can have upto 5 read replica copies of an database.
			- You can have read replicas of read replicas (But watch out for latency)
			- Each read replica has its own DNS endpoints
			- You can now have read replicas that have Multi-AZ.
			- You can create read replicas of Multi-AZ source databases.
			- Read replicas can be promoted to master (be their own databases). This breaks the replication.
			- You can have a read replica in a second region.
	
	===================================
	DynamoDB
	===================================
	- What is DynamoDB?
		- Amazon DynamoDB is a fast and flexible NoSQL database service for all applicaitons that need consistent, single-digit millisecond latency at any scale.
		  It is fully managed database and supports both document and key-value data models. Its flexible data model and reliable performance makes it a great
		  fit for mobile, web, gaming, ad-tech, IoT and many other applicaitons
		  
	- Basics of DynamoDB:
		- Stored on SSD storage.
		- Spread across 3 geographically distinct data centres
		- Eventual Consistent Reads (Default)
		- Strongly Consistent Reads
		
	- Eventual Consistent Reads
		- Consistency across all copies of data is usually reached within a second. Repeating a read after a short time should return the updated data. 
		  This is Best Read Peformance and enabled by default.
		 
	- Strongly consistent Reads
		- Strongly consistent read returns a result that reflects all writes that received a successful response prior to the read. If you need updated data less
		  than one second you should opt for Strongly consistent reads.
		  
	===================================
	Redshift
	===================================
	- What is Redshift?
		- Amazon Redshift is a fast and powerful, fully managed, petabyte-scale data warehouse service in the cloud. Customers can start small for 
		  just $0.25 per hour with no commitments or upfront costs and scale to a petabyte or more for $1000 per terabyte per year, less than a tenth 
		  of most other data warehouse solutions.
		  
	- OLTP vs OLAP
		- Online Transaction Processing (OLTP) differs from Online Analytics Processing (OLAP) in terms of types of queries you will run.
		- OLTP Example:
				- Order number 21234322
				- Pull up a row of data such as Name, Date, Address to deliver to, Delivery Status etc.
		- OLAP transaction Example:
			- Net Profit for EMEA and Pacific for the Digital Radio Product.
			- Pulls in large numbers of records.
			- Sum of Radios Sold in EMEA.
			- Sum of Radios Sold in Pacific.
			- Unit Cost of Radios in each region.
			- Sales price of each radio
			- Sales price - unit cost.
		- Data warehouse databases use different type of architecture both from a database perspective and infrastructure layer.
		
	- Redshift Configuration: Redshift can be configured as follows:
		- Single Node (160GB)
		- Multi-Node
			- Leader Node (manages client connections and receives queries)
			- Compute Node (store data and perform queries and computations). Upto 128 Compute Nodes.
	
	- Advanced Compression:
		- Columnar data stores can be compressed much more than row-based data stores because similar data is stored sequentially on disk. Amazon Redshift employs
		  multiple compression techniques and can be often achieve significant compression relative to traditional relational data store. In addition, Amazon Redshift
		  doesn't required indexes or materialized views, and so uses less space than traditional relational database systems. When loading data into an empty table, 
		  Redshift automatically samples your data and selects the most appropriate compression scheme.
		  
	- Massively Parallel Processing (MPP):
		- Amazon Redshift automatically distributes data and query load across all nodes. Amazon Redshift makes it easy to add nodes to your data warehouse and
		  enables you to maintain fast query performance as your data warehouse grows.
		  
	- Redshift Backups:
		- Enabled by default with a 1 day retention period.
		- Maximum retention period is 35 days.
		- Redshift always attempts to maintain at least three copies of your data (the original and replica on the compute nodes and a backup in Amazon S3).
		- Redshift can also asynchronously replicate your snapshots to S3 in another region for disaster recovery.
	
	- Redshift Pricing:
		- Compute Node Hours (total number of hours you run across all your compute nodes for the billing period. You are billed for 1 unit per node per hour,
		  so a 3-nodes data warehouse cluster running persistently for an entire month would incur 2,160 instance hours. You will not be charged for leader node
		  hours; only compute nodes will incur charges.)
		  
	- Security Considerations:
		- Encrypted in transit using SSL.
		- Encrypted at rest using AES-256 encryption.
		- By default Redshift takes care of key management.
			- Manage your own keys through HSM
			- AWS key Management Service
			
	- Redshift Availability:
		- Currently only available in AZ
		- Can restore snapshots to new AZs in the event of an outage.
		
	===================================
	Aurora
	===================================
	- What is Aurora?
		- Amazon Aurora is a MySQL and PostgreSQL compatible relational database engine that combines the speed and availability of high-end commercial databases
		  with the simplicity and cost-effectiveness of open source database.
		- Aurora provides upto five times better performance than MySQL and three times better performance than PostgreSQL database at a much lower cost, whilst
		  delivering similar performance and availability.
		  
	- Things to know about Aurora:
		- Start with 10GB, Scales in 10GB increments to 64TB (Storage Autoscaling)
		- Compute resources can scale upto 32vCPUs and 244GB of Memory.
		- 2 Copies of your data is contained in each availability zone, with minimum of 3 availability zones. 6 copies of your data.
		
	- Scaling Aurora
		- Aurora is designed to transparently handle the loss(failure) of upto two copies of data without affecting database write availability and upto three copies without
		  affecting read availability.
		- Aurora storage is also self-healing. Data blocks and disks are continuouslly scanned errors and repaired automatically.
		
	- Tree Types of Aurora Read Replicas are available:
		- Aurora Replicas (currently 15)
		- MySQL Read Replicas (currently 5)
		- PostgreSQL (currently 1)
		
	- Replication Feature Comparission:
		-----------------									---------------------------								-------------------------
			Features											Aurora Replicas											MySQL Replicas
		-----------------									---------------------------								-------------------------
		- Number of replicas								- Upto 15												- Upto 5
		- Replication Types									- Asynchronous (milliseconds)							- Asynchronous(seconds)
		- Performance impact of primary						- Low													- High
		- Replica Location									- In-region												- Cross-region
		- Act as failure target								- Yes (no data loss)									- Yes (Potentially minutes of data loss)
		- Automated failover								- Yes													- No
		- Support for user-defined replication delay		- No													- Yes
		- Support for different data or schema vs. primary	- No													- Yes
		
	- Backups with Aurora:
		- Automated backups are always enabled on Aurora DB instance. Backups don't impact database performance.
		- You can also take snapshots with Aurora. This also does not impact performance.
		- You can share Aurora snapshots with other AWS accounts.
		
	- Aurora Serverless:
		- Amazon Aurora Serverless is an on-demand, autoscaling configuration for the MySQL-compatible and PostgreSQL-compatible editions of Aurora. An Aurora
		  Serverless DB cluster automatically starts up, shuts down and scales capacity up or down based on your applicaiton's needs.
		- Aurora Serverless provides a relatively simple, cost-effective option for infrequent, intermittent, or unpredictable workloads.
		
	===================================
	ElastiCache
	===================================
	- What is ElastiCache?
		- ElastiCache is a web service that make it easy to deploy, operate, and scale an in-memory cache in the cloud. The service improves the performance of
		  web applicaitons by allowing you to retrieve information from fast, managed , in-memory caches, instead of relying entirely on slower disk-based databases.
		- ElastiCache supports two fully managed open-source in-memory caching engines:
			- Redis
			- Memcached
			
	- Memcached vs Redis
		----------------------					--------------------		------------------											
			Requirement								Memcached					Redis
		----------------------					--------------------		------------------
		- Simple Cache to offload DB				- Yes						- Yes
		- Ability to scale horizontally				- Yes 						- Yes
		- Multi-threaded performance				- Yes 						- No
		- Advanced Data Types						- No						- Yes
		- Ranking/Sorting data set 					- No 						- Yes
		- Pub/Sub capabilities 						- No 						- Yes
		- Persistence								- No						- Yes
		- Multi-AZ									- No						- Yes
		- Backup and Restore Capabilities			- No						- Yes
	