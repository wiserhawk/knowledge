##############################################################################
					AMAZON WEB SERVICES
##############################################################################


================================================
		VPC
================================================
 - Internet Gateway
 - Route Table
 - Network Access Control List (NACL)
 - Subnets (public and private)
 - Secutiry Groups
 - EC2 instances
 - NAT Gateways vs NAT instances
 - Virtual Private Gateway
 - VPC Peering
 - VPC Endpoints
 - Direct Connect


================================================
		S3 (Simple Storage Service)
================================================
	- Types of S3 
		-- S3 Standard : General Purpose
		-- S3 Intelligent-Tiering (S3 Intelligent-Tiering) : Unknown or changing access
		-- S3 Standard-Infrequent Access (S3 Standard-IA) : Infrequent access
		-- S3 One Zone-Infrequent Access (S3 One Zone-IA) : 
		-- S3 Glacier : Archive
		-- S3 Glacier Deep Archive
	
================================================	
		CloudFront
================================================
	- CloudFront is a CDN (Content Delevery Network) on AWS
	- Edge location: This is the location where content will be cached. This is separate to and AWS Region/AZ.
	- Origin : This is the origin of all the files that the CDN will distribute. This can be an S3 Bucket, an EC2 instance,  an Elastic Load Balancer or Rount53.
	- Distribution : This is the name given to CDN which consists of a collection of Edge Locations.
	- Web Distribution : Typically used for websites.
	- RTMP : Used for Media Streaming.

================================================	
		ELB
================================================
	- Application Load Balancer (Http, Https)
	- Network Load Balancer (TCP, UDP, High proformace)
	- Classic Load Balancer (Old generation LB)
	
	
================================================	
		IAM
================================================
	- Set users, groups, permission and rolles etc.
	- Users : End users such as perople, employees of an organization
	- Groups : A collection of users. Each user in the group will inherit the permissions of the group.
	- Policies : Polices are made up to documents, called Policy documnets. These documents are in a format called JSON and they give permissions as to what a User/Group/Role is able to do.
	- Roles : You create roles and then assign them to AWS Resources.
	
================================================
		AWS Batch
================================================
	- 

================================================
		AWS Lambda
================================================
	- Limitation of Lambda service
		1. The disk space is limited to 512 MB. 
		2. The default deployment package size is 50 MB.
		3. Memory range is from 128 to 1536 MB.
		4. Maximum execution timeout for a function is 15 minutes.
		5. Requests limitations by lambda: Request and response body payload size are maximized to 6 MB.
		6. Event request body can be up to 128 KB.
		
================================================		
		RDS
================================================
	-
	
================================================
		API Gateway
================================================
	- 
	
================================================
		CloudWatch
================================================
	- Basic Monitoring
		-- Is Free
		-- Polls erery 5 minutes
		-- 10 metrics
		-- 5GB of data ingestion
		-- 5GB of data storage
	- Detailed Monitoring
		-- Is Chargeable
		-- Changed per instance per month
		-- Polls every minute
	
================================================
		Route53
================================================
	-

================================================
		ElastiCache
================================================
	- ElastiCache supports two open-source in-memory caching engines.
		-- Memcached
		-- Redis
	

================================================
		AWS Concepts Resources
================================================

# Difference between Secutiry Groups vs Network Access Control List (NACL)
	https://medium.com/awesome-cloud/aws-difference-between-security-groups-and-network-acls-adc632ea29ae
# AWS re:Invent 2018: Elastic Load Balancing & NGINX to Create Elastic Ingress & Egress Tier (DEM48)
	https://www.youtube.com/watch?v=o7FkZFqyGQg&t=16s
# AWS CloudWatch Tutorial | What is AWS CloudWatch | AWS Tutorial | AWS Training Videos | Simplilearn
	https://www.youtube.com/watch?v=_Tqce6pGb44


================================================
		AWS ECS (Elasti Container Service)
================================================
	- Docker Containers Concepts
		-- Docker Daemon - Docker engine. Does all work. Manages docker objects such as images, runs containers, manages n/w (networks between conatainers), storage volumes etc.
		-- Docker Client - Interaction with Docker Daemon using commands like "bulid" , "run" etc. This can be run in same machine as docker daemon or some ohter machine.
		-- Docker Registry - Stores docker images. It could be Docker Hub or Private Registres.
	
	- Docker Commands
		################ Image Commands ####################
		-- Build a image from source path 
			$ docker image build -t first-images:v1 -f /path
		-- List out all docker images
			$ docker image ls
		-- List out running docker containers
			$ docker container ps
		-- All information about image
			$ docker image inspect <imageID>
		-- Remove image from repository
			$ docker image rm <imageID>
		-- To check docker image history
			$ docker image history <imageID>
		-- To login on Docker Hub Repository
			$ docker login
		-- Tag image with docker hub repository
			$ docker tag <imageID> <username-of-docker-hub>/<repository>:<tag>
		-- To push image on Docker Hub
			$ docker image push <repository>:<tag>
		-- Pull image from docker hub
			$ docker image pull <username-of-docker-hub>/<repository>:<tag>
		-- Run pulled image from docker hub.
			$ docker container run -d --name image-from-hub -p 8080:8080 <username-of-docker-hub>/<repository>:<tag>
		
		################ Container Commands ####################
		-- List of running conatainers
			$ docker container ls
					OR
			$ docker container ps
		-- List of all conatainers either running or stopped
			$ docker container ps -a
		-- To stop container 
			$ docker container stop <containerID>
		-- To start container which is stopped.
			$ docker container start <containerID>
		--	To find out error from logs.
			$ docker container logs <containerID>
		-- All information about container
			$ docker container inspect <containerID>
		-- To rename a container
			$ docker container rename <old-name>  <new-name>
		-- To go inside a container box.
			$ docker container exec -it <container-name> /bin/bash
		-- To run container in backgroud.
			$ docker container run --detach --name <container-name> -p 80:8080 <username-of-docker-hub>/<repository>:<tag>
			
		################ Network Commands ####################	
		-- List of all networks created
			$ docker network ls
		-- Create network
			$ docker network create -- attachable -d bridge --internal --subnet =10.20.0.0/16 <network-name>
		-- All information about network
			$ docker network inspect <network-name>
		-- To run container on specific network.
			$ docker container run -d --name <container-name> --net <network-name> -p 80:8080 <username-of-docker-hub>/<repository>:<tag>
			
		################ Volumes and Bind Mounts ####################	
		# Docker Volumes are way to persist data of conatainers, like mysql conatainers.
		# Bind mount is mapping VM path with conatainer's volume path. So that it can mount VM location. 
		
